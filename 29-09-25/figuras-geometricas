;;; geometria.lisp - Programa para calcular áreas y volúmenes de figuras geométricas
;;; Utiliza: setq, read, setf, let, princ

(in-package :cl-user)

;;; ============================================================================
;;; FUNCIONES AUXILIARES
;;; ============================================================================

(defun leer-numero (mensaje)
  "Lee un número del usuario con validación básica"
  (princ mensaje)
  (let ((entrada (read)))
    (if (numberp entrada)
        entrada
        (progn
          (princ "Error: Debes ingresar un número válido. Intenta de nuevo.")
          (terpri)
          (leer-numero mensaje)))))

(defun imprimir-separador ()
  "Imprime una línea separadora"
  (princ "========================================")
  (terpri))

(defun imprimir-titulo (titulo)
  "Imprime un título formateado"
  (terpri)
  (imprimir-separador)
  (princ "   ")
  (princ titulo)
  (terpri)
  (imprimir-separador))

;;; ============================================================================
;;; CÁLCULO DE ÁREAS (10 FIGURAS 2D)
;;; ============================================================================

(defun area-cuadrado ()
  "Calcula el área de un cuadrado usando SETQ"
  (imprimir-titulo "ÁREA DEL CUADRADO")
  (princ "Fórmula: A = lado²")
  (terpri)
  (setq lado (leer-numero "Ingresa el lado: "))
  (setq area (* lado lado))
  (princ "El área del cuadrado es: ")
  (princ area)
  (terpri)
  area)

(defun area-rectangulo ()
  "Calcula el área de un rectángulo usando LET"
  (imprimir-titulo "ÁREA DEL RECTÁNGULO")
  (princ "Fórmula: A = base × altura")
  (terpri)
  (let ((base (leer-numero "Ingresa la base: "))
        (altura (leer-numero "Ingresa la altura: ")))
    (let ((area (* base altura)))
      (princ "El área del rectángulo es: ")
      (princ area)
      (terpri)
      area)))

(defun area-triangulo ()
  "Calcula el área de un triángulo usando SETF"
  (imprimir-titulo "ÁREA DEL TRIÁNGULO")
  (princ "Fórmula: A = (base × altura) / 2")
  (terpri)
  (let ((base nil)
        (altura nil)
        (area nil))
    (setf base (leer-numero "Ingresa la base: "))
    (setf altura (leer-numero "Ingresa la altura: "))
    (setf area (/ (* base altura) 2.0))
    (princ "El área del triángulo es: ")
    (princ area)
    (terpri)
    area))

(defun area-circulo ()
  "Calcula el área de un círculo usando SETQ"
  (imprimir-titulo "ÁREA DEL CÍRCULO")
  (princ "Fórmula: A = π × radio²")
  (terpri)
  (setq radio (leer-numero "Ingresa el radio: "))
  (setq pi 3.141592653589793)
  (setq area (* pi radio radio))
  (princ "El área del círculo es: ")
  (princ area)
  (terpri)
  area)

(defun area-trapecio ()
  "Calcula el área de un trapecio usando LET"
  (imprimir-titulo "ÁREA DEL TRAPECIO")
  (princ "Fórmula: A = ((base_mayor + base_menor) × altura) / 2")
  (terpri)
  (let* ((base-mayor (leer-numero "Ingresa la base mayor: "))
         (base-menor (leer-numero "Ingresa la base menor: "))
         (altura (leer-numero "Ingresa la altura: "))
         (area (/ (* (+ base-mayor base-menor) altura) 2.0)))
    (princ "El área del trapecio es: ")
    (princ area)
    (terpri)
    area))

(defun area-rombo ()
  "Calcula el área de un rombo usando SETF"
  (imprimir-titulo "ÁREA DEL ROMBO")
  (princ "Fórmula: A = (diagonal_mayor × diagonal_menor) / 2")
  (terpri)
  (let ((d-mayor nil)
        (d-menor nil)
        (area nil))
    (setf d-mayor (leer-numero "Ingresa la diagonal mayor: "))
    (setf d-menor (leer-numero "Ingresa la diagonal menor: "))
    (setf area (/ (* d-mayor d-menor) 2.0))
    (princ "El área del rombo es: ")
    (princ area)
    (terpri)
    area))

(defun area-pentagono ()
  "Calcula el área de un pentágono regular usando SETQ"
  (imprimir-titulo "ÁREA DEL PENTÁGONO REGULAR")
  (princ "Fórmula: A = (perímetro × apotema) / 2")
  (terpri)
  (setq lado (leer-numero "Ingresa el lado: "))
  (setq apotema (leer-numero "Ingresa el apotema: "))
  (setq perimetro (* 5 lado))
  (setq area (/ (* perimetro apotema) 2.0))
  (princ "El área del pentágono es: ")
  (princ area)
  (terpri)
  area)

(defun area-hexagono ()
  "Calcula el área de un hexágono regular usando LET"
  (imprimir-titulo "ÁREA DEL HEXÁGONO REGULAR")
  (princ "Fórmula: A = (3√3 / 2) × lado²")
  (terpri)
  (let* ((lado (leer-numero "Ingresa el lado: "))
         (raiz-3 1.732050807568877)
         (area (* (/ (* 3 raiz-3) 2) lado lado)))
    (princ "El área del hexágono es: ")
    (princ area)
    (terpri)
    area))

(defun area-elipse ()
  "Calcula el área de una elipse usando SETF"
  (imprimir-titulo "ÁREA DE LA ELIPSE")
  (princ "Fórmula: A = π × semi-eje-mayor × semi-eje-menor")
  (terpri)
  (let ((eje-a nil)
        (eje-b nil)
        (area nil))
    (setf eje-a (leer-numero "Ingresa el semi-eje mayor: "))
    (setf eje-b (leer-numero "Ingresa el semi-eje menor: "))
    (setf area (* 3.141592653589793 eje-a eje-b))
    (princ "El área de la elipse es: ")
    (princ area)
    (terpri)
    area))

(defun area-paralelogramo ()
  "Calcula el área de un paralelogramo usando SETQ"
  (imprimir-titulo "ÁREA DEL PARALELOGRAMO")
  (princ "Fórmula: A = base × altura")
  (terpri)
  (setq base (leer-numero "Ingresa la base: "))
  (setq altura (leer-numero "Ingresa la altura: "))
  (setq area (* base altura))
  (princ "El área del paralelogramo es: ")
  (princ area)
  (terpri)
  area)

;;; ============================================================================
;;; CÁLCULO DE VOLÚMENES (10 FIGURAS 3D)
;;; ============================================================================

(defun volumen-cubo ()
  "Calcula el volumen de un cubo usando SETQ"
  (imprimir-titulo "VOLUMEN DEL CUBO")
  (princ "Fórmula: V = lado³")
  (terpri)
  (setq lado (leer-numero "Ingresa el lado: "))
  (setq volumen (* lado lado lado))
  (princ "El volumen del cubo es: ")
  (princ volumen)
  (terpri)
  volumen)

(defun volumen-prisma-rectangular ()
  "Calcula el volumen de un prisma rectangular usando LET"
  (imprimir-titulo "VOLUMEN DEL PRISMA RECTANGULAR")
  (princ "Fórmula: V = largo × ancho × alto")
  (terpri)
  (let ((largo (leer-numero "Ingresa el largo: "))
        (ancho (leer-numero "Ingresa el ancho: "))
        (alto (leer-numero "Ingresa el alto: ")))
    (let ((volumen (* largo ancho alto)))
      (princ "El volumen del prisma rectangular es: ")
      (princ volumen)
      (terpri)
      volumen)))

(defun volumen-esfera ()
  "Calcula el volumen de una esfera usando SETF"
  (imprimir-titulo "VOLUMEN DE LA ESFERA")
  (princ "Fórmula: V = (4/3) × π × radio³")
  (terpri)
  (let ((radio nil)
        (volumen nil))
    (setf radio (leer-numero "Ingresa el radio: "))
    (setf volumen (* (/ 4.0 3.0) 3.141592653589793 radio radio radio))
    (princ "El volumen de la esfera es: ")
    (princ volumen)
    (terpri)
    volumen))

(defun volumen-cilindro ()
  "Calcula el volumen de un cilindro usando SETQ"
  (imprimir-titulo "VOLUMEN DEL CILINDRO")
  (princ "Fórmula: V = π × radio² × altura")
  (terpri)
  (setq radio (leer-numero "Ingresa el radio: "))
  (setq altura (leer-numero "Ingresa la altura: "))
  (setq pi 3.141592653589793)
  (setq volumen (* pi radio radio altura))
  (princ "El volumen del cilindro es: ")
  (princ volumen)
  (terpri)
  volumen)

(defun volumen-cono ()
  "Calcula el volumen de un cono usando LET"
  (imprimir-titulo "VOLUMEN DEL CONO")
  (princ "Fórmula: V = (1/3) × π × radio² × altura")
  (terpri)
  (let* ((radio (leer-numero "Ingresa el radio: "))
         (altura (leer-numero "Ingresa la altura: "))
         (pi 3.141592653589793)
         (volumen (* (/ 1.0 3.0) pi radio radio altura)))
    (princ "El volumen del cono es: ")
    (princ volumen)
    (terpri)
    volumen))

(defun volumen-piramide ()
  "Calcula el volumen de una pirámide usando SETF"
  (imprimir-titulo "VOLUMEN DE LA PIRÁMIDE")
  (princ "Fórmula: V = (1/3) × área_base × altura")
  (terpri)
  (let ((area-base nil)
        (altura nil)
        (volumen nil))
    (setf area-base (leer-numero "Ingresa el área de la base: "))
    (setf altura (leer-numero "Ingresa la altura: "))
    (setf volumen (* (/ 1.0 3.0) area-base altura))
    (princ "El volumen de la pirámide es: ")
    (princ volumen)
    (terpri)
    volumen))

(defun volumen-prisma-triangular ()
  "Calcula el volumen de un prisma triangular usando SETQ"
  (imprimir-titulo "VOLUMEN DEL PRISMA TRIANGULAR")
  (princ "Fórmula: V = (base × altura_triangulo / 2) × longitud")
  (terpri)
  (setq base (leer-numero "Ingresa la base del triángulo: "))
  (setq altura-tri (leer-numero "Ingresa la altura del triángulo: "))
  (setq longitud (leer-numero "Ingresa la longitud del prisma: "))
  (setq volumen (* (/ (* base altura-tri) 2.0) longitud))
  (princ "El volumen del prisma triangular es: ")
  (princ volumen)
  (terpri)
  volumen)

(defun volumen-tetraedro ()
  "Calcula el volumen de un tetraedro regular usando LET"
  (imprimir-titulo "VOLUMEN DEL TETRAEDRO REGULAR")
  (princ "Fórmula: V = (lado³) / (6√2)")
  (terpri)
  (let* ((lado (leer-numero "Ingresa el lado: "))
         (raiz-2 1.414213562373095)
         (volumen (/ (* lado lado lado) (* 6 raiz-2))))
    (princ "El volumen del tetraedro es: ")
    (princ volumen)
    (terpri)
    volumen))

(defun volumen-toro ()
  "Calcula el volumen de un toro usando SETF"
  (imprimir-titulo "VOLUMEN DEL TORO (DONA)")
  (princ "Fórmula: V = 2π² × R × r²")
  (princ "  (R = radio mayor, r = radio menor)")
  (terpri)
  (let ((r-mayor nil)
        (r-menor nil)
        (volumen nil))
    (setf r-mayor (leer-numero "Ingresa el radio mayor (del centro al tubo): "))
    (setf r-menor (leer-numero "Ingresa el radio menor (del tubo): "))
    (setf volumen (* 2 (* 3.141592653589793 3.141592653589793) r-mayor r-menor r-menor))
    (princ "El volumen del toro es: ")
    (princ volumen)
    (terpri)
    volumen))

(defun volumen-elipsoide ()
  "Calcula el volumen de un elipsoide usando SETQ"
  (imprimir-titulo "VOLUMEN DEL ELIPSOIDE")
  (princ "Fórmula: V = (4/3) × π × a × b × c")
  (terpri)
  (setq a (leer-numero "Ingresa el semi-eje a: "))
  (setq b (leer-numero "Ingresa el semi-eje b: "))
  (setq c (leer-numero "Ingresa el semi-eje c: "))
  (setq pi 3.141592653589793)
  (setq volumen (* (/ 4.0 3.0) pi a b c))
  (princ "El volumen del elipsoide es: ")
  (princ volumen)
  (terpri)
  volumen)

;;; ============================================================================
;;; MENÚ PRINCIPAL
;;; ============================================================================

(defun menu-areas ()
  "Menú para calcular áreas"
  (imprimir-titulo "🔷 MENÚ DE ÁREAS 🔷")
  (princ "1.  Cuadrado")
  (terpri)
  (princ "2.  Rectángulo")
  (terpri)
  (princ "3.  Triángulo")
  (terpri)
  (princ "4.  Círculo")
  (terpri)
  (princ "5.  Trapecio")
  (terpri)
  (princ "6.  Rombo")
  (terpri)
  (princ "7.  Pentágono regular")
  (terpri)
  (princ "8.  Hexágono regular")
  (terpri)
  (princ "9.  Elipse")
  (terpri)
  (princ "10. Paralelogramo")
  (terpri)
  (princ "0.  Volver al menú principal")
  (terpri)
  (princ "Elige una opción: ")
  (let ((opcion (read)))
    (case opcion
      (1 (area-cuadrado))
      (2 (area-rectangulo))
      (3 (area-triangulo))
      (4 (area-circulo))
      (5 (area-trapecio))
      (6 (area-rombo))
      (7 (area-pentagono))
      (8 (area-hexagono))
      (9 (area-elipse))
      (10 (area-paralelogramo))
      (0 (return-from menu-areas nil))
      (otherwise 
       (princ "Opción no válida")
       (terpri)))
    (unless (= opcion 0)
      (terpri)
      (princ "Presiona Enter para continuar...")
      (read-line)
      (read-line)
      (menu-areas))))

(defun menu-volumenes ()
  "Menú para calcular volúmenes"
  (imprimir-titulo "🔶 MENÚ DE VOLÚMENES 🔶")
  (princ "1.  Cubo")
  (terpri)
  (princ "2.  Prisma rectangular")
  (terpri)
  (princ "3.  Esfera")
  (terpri)
  (princ "4.  Cilindro")
  (terpri)
  (princ "5.  Cono")
  (terpri)
  (princ "6.  Pirámide")
  (terpri)
  (princ "7.  Prisma triangular")
  (terpri)
  (princ "8.  Tetraedro regular")
  (terpri)
  (princ "9.  Toro (dona)")
  (terpri)
  (princ "10. Elipsoide")
  (terpri)
  (princ "0.  Volver al menú principal")
  (terpri)
  (princ "Elige una opción: ")
  (let ((opcion (read)))
    (case opcion
      (1 (volumen-cubo))
      (2 (volumen-prisma-rectangular))
      (3 (volumen-esfera))
      (4 (volumen-cilindro))
      (5 (volumen-cono))
      (6 (volumen-piramide))
      (7 (volumen-prisma-triangular))
      (8 (volumen-tetraedro))
      (9 (volumen-toro))
      (10 (volumen-elipsoide))
      (0 (return-from menu-volumenes nil))
      (otherwise 
       (princ "Opción no válida")
       (terpri)))
    (unless (= opcion 0)
      (terpri)
      (princ "Presiona Enter para continuar...")
      (read-line)
      (read-line)
      (menu-volumenes))))

(defun menu-principal ()
  "Menú principal del programa"
  (loop
    (imprimir-titulo "📐 CALCULADORA DE GEOMETRÍA 📐")
    (princ "1. Calcular ÁREAS (10 figuras 2D)")
    (terpri)
    (princ "2. Calcular VOLÚMENES (10 figuras 3D)")
    (terpri)
    (princ "3. Salir")
    (terpri)
    (princ "Elige una opción: ")
    (let ((opcion (read)))
      (case opcion
        (1 (menu-areas))
        (2 (menu-volumenes))
        (3 (progn
             (terpri)
             (princ "¡Gracias por usar la calculadora de geometría!")
             (terpri)
             (return)))
        (otherwise 
         (princ "Opción no válida. Intenta de nuevo.")
         (terpri)
         (terpri))))))

;;; ============================================================================
;;; INICIALIZACIÓN
;;; ============================================================================

(princ "========================================")
(terpri)
(princ "   Programa cargado correctamente")
(terpri)
(princ "   Ejecuta: (menu-principal)")
(terpri)
(princ "========================================")
(terpri)